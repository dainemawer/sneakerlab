{% if section.settings.enable_ticker %}
  {{ 'odometer-theme-minimal.css' | asset_url | stylesheet_tag }}

  <script src="{{ 'odometer.min.js' | asset_url }}" defer></script>
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/Glide.js/3.2.0/css/glide.core.min.css"
    integrity="sha512-YQlbvfX5C6Ym6fTUSZ9GZpyB3F92hmQAZTO5YjciedwAaGRI9ccNs4iw2QTCJiSPheUQZomZKHQtuwbHkA9lgw=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"
  >
  <script
    src="https://cdnjs.cloudflare.com/ajax/libs/Glide.js/3.2.0/glide.min.js"
    integrity="sha512-IkLiryZhI6G4pnA3bBZzYCT9Ewk87U4DGEOz+TnRD3MrKqaUitt+ssHgn2X/sxoM7FxCP/ROUp6wcxjH/GcI5Q=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"
    defer
  ></script>
  <div class="ticker-wrapper">
    <div style="display: flex; justify-content: center; align-items: center;">
      <div class="glide glide--vertical" id="multi" style="width: 300px; text-align: right;">
        <div class="glide__track" data-glide-el="track">
          <ul class="glide__slides" id="ulContainer">
            {% for block in section.blocks %}
              <li class="glide__slide">
                <input hidden id="stat-{{ forloop.index }}" class="stat-input" value="{{ block.settings.stat-number }}">
                <div>{{ block.settings['stat-text'] }}</div>
              </li>
            {% endfor %}
          </ul>
        </div>
      </div>

      <div style="min-width: 300px;" class="odometer" style="display: inline-block"></div>

      <div class="glide glide--vertical" id="multi2" style="width: 300px; text-align: right;">
        <div class="glide__track" data-glide-el="track">
          <ul class="glide__slides" id="ulContainer">
            {% for block in section.blocks %}
              <li class="glide__slide">
                <div>{{ block.settings['stat-text'] }}</div>
              </li>
            {% endfor %}
          </ul>
        </div>
      </div>
    </div>

    <div class="stats-subtitle-message" style="text-align: center;">
      {{ section.settings['subtitle-message'] }}
    </div>
  </div>

  <style>
    #multi,
    #multi2 {
      height: 54px;
    }

    .glide {
      overflow: hidden;
    }

    .glide__track {
      display: flex;
    }

    .glide__slides {
      display: flex;
      flex-direction: column;
    }

    .glide--vertical .glide__slides {
      width: auto;
      flex-direction: column;
      transform: translate3d(0, 0, 0); /* Reset transform */
    }

    .glide--vertical .glide__slide {
      display: flex;
      justify-content: flex-end;
      align-items: center;
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      let mobileMenuButton = document.querySelector('#mobile-navigation-trigger');

      mobileMenuButton.addEventListener('click', function () {
        let odometer1 = document.querySelector('.ticker-wrapper');
        odometer1.classList.toggle('hidden');
      });

      window.odometerOptions = {
        format: '(,ddd)',
        animation: 'count',
        duration: 10000
      }

      let odometer = document.querySelector('.odometer');
      odometer.innerHTML = 0;

      let stats = document.querySelectorAll('.stat-input');

      let odometerObject = new Odometer({
          el: odometer,
          value: 0,
          minIntegerLen: 9
      });
      let paddedString = String(stats[0].value).padStart(9, '0')

      odometerObject.update(paddedString);


      const container = document.getElementById("multi")
      const slidesContainer = document.getElementById("ulContainer")
      const slides = slidesContainer.querySelectorAll(".glide__slide")
      const countSlides = slides.length
      const perView = 1
      const containerHeight = 54

      var glide = new Glide("#multi", {
        type: 'slider',
        autoplay: 5000,
        perView: perView,
        bound: true,
        dragThreshold: false,
        swipeThreshold: false,
        dragDistance: false,
        hoverpause: false
      }).on("build.after", function () {
          // Fix height calculation
          slides.forEach((s) => {
            s.style.height = containerHeight / perView + "px"
          })

          // Update vertical translation
          glide.on("run", function (move) {
            var translateY = glide.index * (-100 / perView / (countSlides / perView))
            // go to 0 when index is countSlides - perView
            // if (glide?.index - 1 > countSlides - perView) {
            //   glide.settings.direction="rtl"
            //   translateY = 0;
            // }
            slidesContainer.style.transform = "translate3d(0, " + translateY + "% , 0)"
          })

          // Handle looping
          // glide.on("move.after", function () {
          //   if (glide.index === countSlides - perView) {
          //     console.log("go to 0")
          //     glide.go("=0")
          //   }
          // })
      }).on("run.after", function () {
          let odometer = document.querySelector('.odometer');
          odometer.innerHTML = 0;
          let currentIndex = 'stat-' + (glide.index + 1);

          let stats = document.querySelectorAll('.stat-input');

          let odometerObject = new Odometer({
              el: odometer,
              value: 0,
          });

          stats.forEach((statInput) => {
            let stat = statInput.value;
            let statId = statInput.id;

            if (statId == currentIndex) {
              odometerObject.update(stat);
            }
          });
      });

      var glide2 = new Glide("#multi2", {
        type: 'slider',
        autoplay: 5000,
        perView: perView,
        bound: true,
        dragThreshold: false,
        swipeThreshold: false,
        dragDistance: false,
        hoverpause: false
      });

      glide.mount();
      glide2.mount();
    });
  </script>
{% endif %}

{% schema %}
{
  "name": "Ticker Settings",
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_ticker",
      "label": "Enable Ticker",
      "default": false
    },
    {
      "type": "text",
      "id": "subtitle-message",
      "label": "Sub Title Message"
    }
  ],
  "max_blocks": 6,
  "blocks": [
     {
       "name": "Statistic",
       "type": "stat",
       "settings": [
         {
           "type": "text",
           "id": "stat-text",
           "label": "Stat Text"
         },
         {
           "type": "number",
          "id": "stat-number",
          "label": "Stat Number"
         }
       ]
     }
   ]
}
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}
